@page "/{UserId}"

@using Data;

@inject Microsoft.AspNetCore.Identity.SignInManager<Data.ApplicationUser> SignInManager
@inject NavigationManager _navigationManager

<h3>Main</h3>

@if (@UserId == @SignInUserId)
{
    <div>true</div>

    <button @onclick="OnClickEditButton">Edit</button>
}
else
{
    <div>false</div>
}

<table class="table table-bordered table-responsive">
    <tbody>
    @for(int y=0; y<10; y++)
    {
        <tr>
        @for(int x=0; x<10; x++)
            {
                <td class="@HeyaTableDataAttribute(x, y)">
                </td>
            }
        </tr>
    }
    </tbody>
</table>

@code {
    [Parameter]
    public string? UserId { get; set; }

    private string? SignInUserId { get; set; }

    private Heya[]? Heyas { get; set; }

    protected override void OnParametersSet()
    {
        var user = SignInManager.Context.User;

        if (SignInManager.IsSignedIn(user))
        {
            SignInUserId = SignInManager.UserManager.GetUserId(user);
        }

        using var applicationDbContext = new ApplicationDbContext();

        Heyas = applicationDbContext.Heyas!.Where(heya => heya.Owner == UserId).ToArray();

        base.OnParametersSet();
    }

    private string HeyaTableDataAttribute(int x, int y)
    {
        string classAttribute = "square";

        if ((Heyas == null) || (Heyas.Length == 0))
        {
            return classAttribute;
        }

        var InnerWidthHeyas = Heyas.Where(heya => (y >= heya.Y) && (y < (heya.Y + heya.Height)));
        var InnerHeightHeyas = Heyas.Where(heya => (x >= heya.X) && (x < (heya.X + heya.Width)));

        if ((InnerWidthHeyas.Count() == 0) && (InnerHeightHeyas.Count() == 0))
        {
            return classAttribute;
        }

        if ((InnerWidthHeyas.Any(heya => ((heya.X <= x) && (x < (heya.X + heya.Width)))) && (InnerHeightHeyas.Any(heya => ((heya.Y <= y) && (y < (heya.Y + heya.Height)))))))
        {
            classAttribute += " heya";
        }

        if (InnerWidthHeyas.Any(heya => (x == heya.X)))
        {
            classAttribute += " left";
        }

        if (InnerWidthHeyas.Any(heya => ((x + 1) == (heya.X + heya.Width))))
        {
            classAttribute += " right";
        }

        if (InnerHeightHeyas.Any(heya => (y == heya.Y)))
        {
            classAttribute += " top";
        }

        if (InnerHeightHeyas.Any(heya => ((y + 1) == (heya.Y + heya.Height))))
        {
            classAttribute += " bottom";
        }

        return classAttribute;
    }

    private void OnClickEditButton()
    {
        _navigationManager.NavigateTo("/EditHeya");
    }
}
